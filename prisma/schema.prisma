// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id String @id @default(uuid())
  email String @unique 
  name String
  password String
  jobs JobApplication[]
  profile UserProfile?
  createdAt DateTime @default(now())
}
model UserProfile {
  id         String   @id @default(uuid())
  userId     String   @unique
  user       User     @relation(fields: [userId], references: [id])
  contact    Json 
  skills     Json     
  experience Json     
  education  Json     
  resumeText String?  
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model JobApplication {
  id String @id @default(uuid())
  company String
  position String
  source String?
  status Status @default(WISHLIST)
  appliedDate DateTime?
  deadline DateTime?
  contactName String?
  contactEmail String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String
  user User @relation(fields: [userId],references: [id])
  notes Notes[]
  description Description?
}


model Description {
  id String @id @default(uuid())
  description String?
  jobId String @unique
  job JobApplication @relation(fields: [jobId],references: [id])
}

model Notes {
  id String @id @default(uuid())
  notes String
  createdAt DateTime @default(now())
  jobs JobApplication @relation(fields: [jobId],references: [id])
  jobId String

}

enum Status {
  WISHLIST
  APPLIED
  INTERVIEW
  OFFER
  HIRED
  REJECTED
}